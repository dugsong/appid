dnl Process this file with autoconf to produce a configure script.

AC_INIT(appid.h.tmpl)
AM_INIT_AUTOMAKE(appid, 1.0)
AM_MAINTAINER_MODE

AC_PROG_CC
AM_PROG_LIBTOOL

dnl Checks for Python.
dnl XXX - use AM_PATH_PYTHON after automake upgrade
AC_MSG_CHECKING(for Python)
AC_ARG_WITH(python,
[  --with-python=DIR       build Python module (from optional build directory DIR, or use PATH) ],
[ case "$withval" in
  yes)
     AC_MSG_RESULT(yes)
     PYTHON="python"
     ;;
  no)
     AC_MSG_RESULT(no)
     ;;
  *)
     AC_MSG_RESULT($withval)
     for subdir in . bin; do
        if test -x $withval/$subdir/python; then
           owd=`pwd`
           if cd $withval/$subdir; then withval=`pwd`; cd $owd; fi
           PYTHON="$withval/python"
           break
        fi
     done
     if test "x$PYTHON" = "x"; then
        AC_ERROR(python not found in $withval)
     fi
     ;;
  esac 
],
[ AC_MSG_RESULT(no) ])
AC_SUBST(PYTHON)
AM_CONDITIONAL(PYTHON, [test "x$PYTHON" != "x"])

dnl Checks for Ragel.
AC_MSG_CHECKING(for Ragel)
AC_ARG_WITH(ragel,
[  --with-ragel=DIR        use Ragel to compile new appid.c (from optional build directory DIR, or use PATH) ],
[ case "$withval" in
  yes)
     AC_MSG_RESULT(yes)
     AC_CHECK_PROGS(RAGEL, [ragel])
     AC_CHECK_PROGS(RLGEN, [rlgen-cd rlcodegen])
     ;;
  no)
     AC_MSG_RESULT(no)
     ;;
  *)
     AC_MSG_RESULT($withval)
     if test -x $withval/ragel/ragel; then
        RAGEL="$withval/ragel/ragel"
     fi
     if test -x $withval/rlgen-cd/rlgen-cd; then
        RLGEN="$withval/rlgen-cd/rlgen-cd"
     fi
     if test -x $withval/rlcodegen/rlcodegen; then
        RLGEN="$withval/rlcodegen/rlcodegen"
     fi
     if test "x$RAGEL" = "x"; then
        AC_ERROR(ragel not found in $withval)
     fi
     if test "x$RLGEN" = "x"; then
        AC_ERROR(rlgen-cd/rlcodegen not found in $withval)
     fi
     ;;
  esac 
],
[ AC_MSG_RESULT(no) ])
AC_SUBST(RAGEL)
AC_SUBST(RLGEN)
AM_CONDITIONAL(RAGEL, [test "x$RAGEL" != "x"])

AC_OUTPUT([ Makefile ])
